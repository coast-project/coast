#-----------------------------------------------------------------------------------------------------
# Copyright (c) 2005, Peter Sommerlad and IFS Institute for Software at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or modify it under the terms of
# the license that is included with this library/application in the file license.txt.
#-----------------------------------------------------------------------------------------------------
{
	# -- Config for Acceptor Factories  in  ListenerPoolTest
	# These are the SLLServerSocket test cases.
	/TCP5010 {
		/Address "127.0.0.1"
		/Port	5010
		/KeyFileServer	"cert_files/clientkey.pem"
		/CertFileServer	"cert_files/clientcrt.pem"
	}
	# Expecting send/recieve to fail
	/TCP5011 {
		/Port	5011
	}
	# Check peer cert, this test should be ok.
	# Expecting send/recieve to be ok
	/TCP5012 {
		/Port	5012
		/KeyFileServer	"cert_files/serverkey.pem"
		/CertFileServer	"cert_files/serverchain.pem"
		/SSLPeerCAFile "cert_files/fullchain.pem" #"subca1cert.pem"
		/SSLVerifyDepth 2
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 1
	}
	# Expecting send/recieve to be ok
	/TCP5013 {
		/Port	5013
		/KeyFileServer	"cert_files/serverkey.pem"
		/CertFileServer	"cert_files/serverchain.pem"
		/SSLPeerCAFile "cert_files/fullchain.pem" #"subca1cert.pem"
		/SSLVerifyDepth 2
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 1
		/VerifyCertifiedEntity 1
		/CertVerifyStringIsFilter 0
		/CertVerifyString		"emailAddress=dylan.hank.com@wildplanet.com,CN=dylan.hank.com,OU=CertIssueing,O=ClientSite,L=ZH,ST=ZH,C=CH"
	}
	# Expecting send/recieve to be ok
	/TCP5014 {
		/Port	5014
		/KeyFileServer	"cert_files/serverkey.pem"
		/CertFileServer	"cert_files/serverchain.pem"
		/SSLPeerCAFile "cert_files/fullchain.pem" #"subca1cert.pem"
		/SSLVerifyDepth 2
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 1
		/VerifyCertifiedEntity 1
		/CertVerifyStringIsFilter 1
		/CertVerifyString		"O=ClientSite,L=ZH,ST=ZH,C=CH"
	}
	# chain depth too "short"
	# Expecting send/recieve to fail
	/TCP5015 {
		/Port	5015
		/KeyFileServer	"cert_files/serverkey.pem"
		/CertFileServer	"cert_files/serverchain.pem"
		/SSLPeerCAFile "cert_files/fullchain.pem" #"subca1cert.pem"
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 1
	}
	# Do not check peer cert
	# Expecting send/recieve to be ok
	/TCP5016 {
		/Port	5016
		/KeyFileServer	"cert_files/serverkey.pem"
		/CertFileServer	"cert_files/serverchain.pem"
		/SSLPeerCAFile "cert_files/fullchain.pem" #"subca1cert.pem"
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 0
		/SSLVerifyFailIfNoPeerCert 0
	}
	# Do not check peer cert, leave stream open
	# Expecting send/recieve to be ok
	/TCP5017 {
		/Port	5017
		/KeyFileServer	"cert_files/serverkey.pem"
		/CertFileServer	"cert_files/serverchain.pem"
		/SSLPeerCAFile "cert_files/fullchain.pem" #"subca1cert.pem"
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 0
		/SSLVerifyFailIfNoPeerCert 1
	}
	# Do check peer cert, no peer cert there and close stream
	# Expecting send/recieve to fail
	/TCP5018 {
		/Port	5018
		/KeyFileServer	"cert_files/serverkey.pem"
		/CertFileServer	"cert_files/serverchain.pem"
		/SSLPeerCAFile "cert_files/fullchain.pem" #"subca1cert.pem"
		/SSLVerifyDepth 10
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 1
	}
	# Expecting send/recieve to fail because of SSLVerifyDepth
	/TCP5019 {
		/Port	5019
		/KeyFileServer	"cert_files/serverkey.pem"
		/CertFileServer	"cert_files/serverchain.pem"
		/SSLPeerCAFile "cert_files/fullchain.pem" #"subca1cert.pem"
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 0
		/VerifyCertifiedEntity 1
		/CertVerifyStringIsFilter 0
		/CertVerifyString		"emailAddress=dylan.hank.com@wildplanet.com,CN=dylan.hank.com,OU=CertIssueing,O=ClientSite,L=ZH,ST=ZH,C=CH"
	}
	# Expecting send/recieve to be ok
	/TCP5020 {
		/Port	5020
		/KeyFileServer	"cert_files/rootCA1key.pem"
		/CertFileServer	"cert_files/rootCA1crt.pem"
		/SSLPeerCAFile "cert_files/rootCA1crt.pem" #"subca1cert.pem"
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 1
		/VerifyCertifiedEntity 1
		/CertVerifyStringIsFilter 0
		/CertVerifyString		"emailAddress=rootca1@wildplanet.com,CN=RootCA1,OU=CertIssueing,O=RootCA1,L=ZH,ST=ZH,C=CH"
	}
}

#-----------------------------------------------------------------------------------------------------
# Copyright (c) 2005, Peter Sommerlad and IFS Institute for Software at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or modify it under the terms of
# the license that is included with this library/application in the file license.txt.
#-----------------------------------------------------------------------------------------------------

{

#################################################################################
#
#	Module List definition
#	List of modules that are getting configured during GlobalInit and ReInit
#
#################################################################################
	/DLL {
		applog
		dataaccess
		renderers
	}

	/Modules {
		SybaseModule
		DataAccessImplsModule
		RenderersModule
		MappersModule
		ActionsModule
		TimeLoggingModule
		AppLogModule
	}

	/Actions {
		/CallDataAccessAction	{ CallDA }
	}

	/SybaseModule {
		/SybCTDAImpl {
			/ParallelQueries		20
			/InterfacesPathName		"config/interfaces"
		}
		/SybCTnewDAImpl {
			/ParallelQueries		1
			/CloseConnectionTimeout	60
			/InterfacesPathName		"config/interfaces"
		}
		/SybCTPoolDAImpl {
			/HIKU_INT2 {
				/ParallelQueries	5
				/InterfacesPathName	"config/interfaces"
			}
			/SYB_FKISQA {
				/ParallelQueries	20
				/InterfacesPathName	"config/interfaces"
			}
		}
	}

	/DataAccessImpls {
		/SybCTDAImpl {
			/SybLocalSa {
				SybShowDatabases
				SybDeleteFromDatabase
			}
			/SybLocalTest {
				SybSearchTest
				SybLimitedSearchTest
				SybLimitedSearchByParam
				SybLimitedSearchByParamOverride
				SybInsertDatabases
#				SybTestTypeConversions
				SybErrorTest
				SybDeleteStoredProcedureTest
				SybCreateStoredProcedureTest
				SybExecuteStoredProcedureTest
				SybSingleRowForSingleSelects
				SybMultipleRowsForMultipleSelects

				/SybTestThreadDA {
					SybTestThreadDAWithError
				}
			}
		}
		/SybCTPoolDAImpl {
			/SybPoolLocalSa {
				SybPoolShowDatabases
				SybPoolDeleteFromDatabase
			}
			/SybPoolLocalTest {
				SybPoolSearchTest
				SybPoolInsertDatabases
#				SybPoolTestTypeConversions
				SybPoolErrorTest
				SybPoolDeleteStoredProcedureTest
				SybPoolCreateStoredProcedureTest
				SybPoolExecuteStoredProcedureTest
				SybPoolSingleRowForSingleSelects
				SybPoolMultipleRowsForMultipleSelects
				SybPoolSeparatedTitlesFromRows

				/SybTestThreadPoolDA {
					SybTestThreadPoolDAWithError
				}
			}
		}
		/SybCTnewDAImpl {
			/SybNewLocal {
				SybNewDASearchTest
				/SybTestThreadnewDA {
					SybTestThreadnewDAWithError
				}
			}
		}
	}

	/Mappers {
		/Input {
			/ParameterMapper {
				/SybLocalSa {
					/SybShowDatabases {
						SybPoolShowDatabases
					}
					/SybDeleteFromDatabase {
						SybPoolDeleteFromDatabase
					}
				}
				/SybLocalTest {
					/SybSearchTest {
						SybPoolSearchTest
						SybNewDASearchTest
					}
					SybLimitedSearchTest
					/SybLimitedSearchByParam {
						SybLimitedSearchByParamOverride
					}
					/SybInsertDatabases {
						SybPoolInsertDatabases
					}
#					SybTestTypeConversions
#					SybPoolTestTypeConversions
					/SybErrorTest {
						SybPoolErrorTest
					}
					/SybDeleteStoredProcedureTest {
						SybPoolDeleteStoredProcedureTest
					}
					/SybCreateStoredProcedureTest {
						SybPoolCreateStoredProcedureTest
					}
					/SybExecuteStoredProcedureTest {
						SybPoolExecuteStoredProcedureTest
					}
					/SybSingleRowForSingleSelects {
						SybPoolSingleRowForSingleSelects
					}
					/SybMultipleRowsForMultipleSelects {
						SybPoolMultipleRowsForMultipleSelects
					}
					SybPoolSeparatedTitlesFromRows
				}
				/SybTestThreadDA {
					SybTestThreadPoolDA
					SybTestThreadnewDA
					/SybTestThreadDAWithError {
						SybTestThreadPoolDAWithError
						SybTestThreadnewDAWithError
					}
				}
			}
		}
		/Output {
			/ResultMapper {
				/SybCTnewDAImpl {
					SybNewDASearchTest
					SybTestThreadnewDA
					SybTestThreadnewDAWithError
				}
			}
			/NameUsingOutputMapper {
				SybSearchTest
				SybLimitedSearchTest
				SybLimitedSearchByParam
				SybLimitedSearchByParamOverride
				SybShowDatabases
				SybInsertDatabases
				SybDeleteFromDatabase
#				SybTestTypeConversions
				SybErrorTest
				SybDeleteStoredProcedureTest
				SybCreateStoredProcedureTest
				SybExecuteStoredProcedureTest
				SybSingleRowForSingleSelects
				SybMultipleRowsForMultipleSelects
				SybTestThreadDA
				SybTestThreadDAWithError

				SybPoolSearchTest
				SybPoolShowDatabases
				SybPoolInsertDatabases
				SybPoolDeleteFromDatabase
#				SybPoolTestTypeConversions
				SybPoolErrorTest
				SybPoolDeleteStoredProcedureTest
				SybPoolCreateStoredProcedureTest
				SybPoolExecuteStoredProcedureTest
				SybPoolSingleRowForSingleSelects
				SybPoolMultipleRowsForMultipleSelects
				SybPoolSeparatedTitlesFromRows
				SybTestThreadPoolDA
				SybTestThreadPoolDAWithError
			}
		}
	}

	/Renderers {
		/DateRenderer			{ Date }
		/ContextLookupRenderer	{ Lookup }
	}

#--- Logging-Configuration --------------------------------------------

	/TimeLoggingModule {
		/DoTiming	1
		/DoLogging	1
	}
	/AppLogModule {
		/LogDir		"."					# TestOnBondo tkhba tkeuk tkfnd
		/RotateDir	"."
#		/LogDir		"/hiku/LOGS/CalcServer"	# svzqhiku01 svzphiku01 svzphiku02 svzphiku03
		/RotateTime	"23:59"
		/Servers {
			/Server {
				/TimerLog {
					/FileName	"MethodTimer.log"
					/Format		%MethodTimerLog.Format
					/Header		%MethodTimerLog.Header
				}
			}
		}
	}
	/LogTimeStamp {
#		{ /Date { /Format "%d/%b/%Y:%H:%M:%S%Z" } }
		{ /Date { /Format "%Y%m%d%H%M%S" } }
	}
	/MethodTimerLog {
		/Header "# TimeStamp [Class.Method] [Message]-> <time>ms"
		/Format {
			%LogTimeStamp
			" ["
			{ /Lookup TimeLogEntry.Key }
			"] "
			{ /StringCompareRenderer {
				/String1	{ /Lookup TimeLogEntry.Msg }
				/String2	""
				/Unequal {
					"["
					{ /Lookup TimeLogEntry.Msg }
					"] "
				}
			} }
			"-> "
			{ /Lookup TimeLogEntry.Time }
			"ms"
		}
	}

#--- time logging configuration ---
	# configure where to log, acts as config for TimeLoggingAction
	/TimeLoggingAction {
#		{ /TimeLoggingAction	{
#			/Channel		TimerLog
#			/TimeEntries	Log.Times.Method
#		} }
		{ /TimeLoggingAction	{
			/Channel		TimerLog
			/TimeEntries	Log.Times.DataAccess
		} }
	}

	# specify which entries to log
	/EnabledValues {
		/Log {
			/Times {
				/Request					0		# measured with RequestTimer macro
				/Method {							# measured with MethodTimer macro
					/Page {
						/Render				0
					}
				}
				/DataAccess {						# measured with DAAccessTimer macro
					/DataAccess {
						/StdExec			1
						/Exec				0
					}
					/SybCTnewDAImpl {
#						/Exec				1
#						/Open				1
#						/SqlExec			1
#						/DoFetchData		1
#						/DoFillResults		1
#						/DoPrepareSQL		1
					}
					/ResultMapper {
						/Put				0
					}
					/ParameterMapper {
						/Get				0
					}
				}
			}
		}
	}
	/SybCTnewDAImplTest {
		/SybaseModule {
			/SybCTnewDAImpl {
				/ParallelQueries		10
				/CloseConnectionTimeout	60
				/InterfacesPathName		"config/interfaces"
			}
		}
	}
}

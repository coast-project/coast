#! /bin/sh
. `dirname $0`/lib/measure_utils.sh
which valgrind >/dev/null || { echo "No valgrind found." >&2; exit 1; }

# DIFF COMMAND
print_diff_cmd() {
	echo "git diff --no-index perf_results/massif/${DIFF_TEST}-32_${BUILDCFG}.massif perf_results/massif/${DIFF_TEST}-64_${BUILDCFG}.massif"
	exit 0
}

# EXPORT
export_as_csv() (
	echo "CSV export for Massif doesn't make sense." >&2
	return 1
)

# Measures performance of $TEST_NAMES using `valgrind --tool=massif`.
#
# Depends on:
#   * measure_utils.sh
#   * `valgrind --tool=massif`
#   * $TEST_NAMES
#   * $PERF_DIR
#   * $ARCHBITS
#
# Honors:
#   * $START_TIME
measure_performance() {
	SCONSFLAGS="--ignore-missing --with-src-boost=3rdparty/boost --with-src-zlib=3rdparty/zlib --with-bin-openssl=3rdparty/openssl --build-cfg=$BUILDCFG --archbits=$ARCHBITS" # --warnlevel=medium --enable-Trace" # --config=force
	build `cat $TEST_NAMES`

	##
	# MEASUREMENT
	#
	progress "VALGRIND-MASSIF-BASED MEASUREMENT ..."
	for TESTNAME in `cat $TEST_NAMES`
	do
		start $TESTNAME
		RESULT=$PERF_DIR/massif/${TESTNAME}-${ARCHBITS}_${BUILDCFG}.massif
		RUNPARAMS="-x valgrind -x '--tool=massif' -x '--time-unit=B' -x '--detailed-freq=1' -x '--massif-out-file=$RESULT'"
		mkdir -p `dirname $RESULT`
		log="$PERF_DIR/massif/${TESTNAME}-${ARCHBITS}_${BUILDCFG}.log"
		if log_cmd scons CXXFLAGS="-fPIC" $SCONSFLAGS --run-force --runparams="${RUNPARAMS} -- -all" $TESTNAME > $log 2>&1
		then
			measurement_successful $TESTNAME
		else
			measurement_failed $TESTNAME $log
		fi

	done
}

##
# MAIN
#

[ -n "$DIFF_TEST" ] && { print_diff_cmd; exit; }
$EXPORT && { export_as_csv; exit $?; }

BUILDCFG="optimized"
measure_performance_for_selected_archbits

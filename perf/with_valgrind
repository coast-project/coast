#! /bin/sh
. `dirname $0`/lib/measure_utils.sh
. perf/lib/valgrind.sh
which valgrind >/dev/null || { echo "No valgrind found." >&2; exit 1; }

if [ -n "$DIFF_TEST" ]
then
	echo "git diff --no-index perf_results/valgrind/${DIFF_TEST}-32_${BUILDCFG}.valgrind perf_results/valgrind/${DIFF_TEST}-64_${BUILDCFG}.valgrind"
	echo "memory summary: find valgrind/ -print -iname '*.valgrind' -exec sed -n '/HEAP SUMMARY/,/Checked/p' {} \;"
	exit 0
fi

# EXPORT
if $EXPORT
then
	# print CSV header
	echo "datetime,testname,archbits,buildcfg,method,X,Y"

# Example:
# $ cat perf_results/valgrind/CoastEBCDICTest-64_debug.valgrind
# [...]
#
#==18344== HEAP SUMMARY:
#==18344==     in use at exit: 126,224 bytes in 55 blocks
#==18344==   total heap usage: 7,892 allocs, 7,837 frees, 704,506 bytes allocated
#
# [...]
#
#==18344== LEAK SUMMARY:
#==18344==    definitely lost: 336 bytes in 3 blocks
#==18344==    indirectly lost: 53,184 bytes in 51 blocks
#==18344==      possibly lost: 0 bytes in 0 blocks
#==18344==    still reachable: 72,704 bytes in 1 blocks
#==18344==         suppressed: 0 bytes in 0 blocks
#
# [...]

	for file in $PERF_DIR/valgrind/*-*_*.csv
	do
		# extract and set variables:
		# 	* testname
		#	* archbits
		# 	* buildcfg
		# 	* datetime
		eval $(basename -s .csv $file |\
		sed -e 's/\(\w\+\)-\([[:digit:]]\+\)_\(\w\+\)/testname="\1" \
			archbits="\2" buildcfg="\3"/')
		datetime=`tail -2 $file | head -1 | cut -b3-`

		# print CSV with additional values prepended
		tail -1 $file | sed -e "s/^/$datetime,$testname,$archbits,$buildcfg,/"
	done
	exit
fi

get_confirmation

for ARCHBITS in $ALL_ARCHBITS
do
	measure_with_valgrind
done

echo "# Performance measurement done. ################################" >&2

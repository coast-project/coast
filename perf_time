#! /bin/sh

if [ "$1" = '--help' -o "$1" = '-h' ]
then
	cat <<EOF
Synopsis: $0 <ARCHBITS> <BUILDCFG>

The purpose of this script is to build and run tests and log some basic time
and memory statistics into CSV files to be able to compare the differences
between 32-bit and 64-bit builds.

Prerequisites:

  * virtual ENV for COAST has to be activated already

Usage:
------
Try running this script twice, like this:

	./perf_time 64 optimized
	./perf_time 32 optimized

It'll measure the performance of the test suite of both the 64-bit and
the 32-bit build, both built with the build config "optimized".

The results go into files in the perf/ directory.  To get a nice comparison
view of the results of one test, try something like this:

	vim -O perf/CoastFoundationPerfTest-*_optimized.csv
EOF
	exit 0
fi

if [ $# -ne 2 ]
then
	cat <<EOF >&2
Please provide archbits (e.g. "32" or "64") and build config (e.g. "debug",
"optimized", "profile").

Example:
	$0 64 optimized

For help, run:
	$0 --help
EOF
	exit 1
fi

set -e # abort on first error
set -x # print exact commands

ARCHBITS=$1
BUILDCFG=$2
NTIMES="$PWD/`dirname $0`/ntimes" # absolute path to ntimes utility
SCONSFLAGS="--ignore-missing --with-src-boost=3rdparty/boost --with-src-zlib=3rdparty/zlib --with-bin-openssl=3rdparty/openssl --build-cfg=$BUILDCFG --archbits=$ARCHBITS" # --warnlevel=medium --enable-Trace" # --config=force 
PERF_DIR="perf"
mkdir -p $PERF_DIR

# GET LIST OF TESTS
ALL_TESTS=`mktemp`
#scons -u --showtargets | grep '^ - .*Test$'| cut -d' ' -f3 > $ALL_TESTS

# FIXME: hardcoded subset of all tests here
cat <<EOF > $ALL_TESTS
CoastFoundationPerfTest
EOF
#CoastFoundationBaseTest
#CoastCompressTest
#CoastRegexTest
#CoastStorageTest

echo ">>> List of tests to be run: " >&2
cat $ALL_TESTS >&2
echo "(`wc -l < $ALL_TESTS` tests in total)" >&2
echo "Press return to confirm..." >&2
read confirmation

# BUILD
echo ">>> Building all tests ..." >&2
cat $ALL_TESTS | xargs scons $SCONSFLAGS 

# WARMUP
echo ">>> Warmup round ..." >&2
cat $ALL_TESTS | while read TESTNAME
do
	echo ">>> (WARMUP) Running test $TESTNAME ..." >&2
	scons $SCONSFLAGS --run-force $TESTNAME
done

# TIME MEASUREMENT
echo ">>> Measuring performance now ..." >&2
cat $ALL_TESTS | while read TESTNAME
do
	echo ">>> Running test $TESTNAME ..." >&2
	PERF_RESULT=$PWD/$PERF_DIR/${TESTNAME}-${ARCHBITS}_${BUILDCFG}.csv

	# write CSV header if file doesn't exist yet
	if [ ! -e $PERF_RESULT ];
	then
		echo "user[s],system[s],real[s],cpu,maxres[KB],avgres[KB],avgunshared[KB],avgunsharedstack[KB],swaps" > $PERF_RESULT
	fi
	echo "# `date`" >> $PERF_RESULT
	
	# run test n times and log statistics
	scons $SCONSFLAGS --run-force --runparams="-x /usr/bin/time -x '-f' -x '%U,%S,%e,%P,%M,%t,%D,%p,%W' -x '--output=$PERF_RESULT' -x '--append' -x $NTIMES -x 5 -- -all" $TESTNAME >/dev/null
done
echo ">>> Performance measurement done." >&2

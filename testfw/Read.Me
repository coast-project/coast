
Nine simple steps for your personal happiness
---------------------------------------------

To use the test framework do:

1. Make the framework (no Sniff+ support needed, the framework
   contains its own Makefile). Just type `make` in the
   directory where you checked out the files.
   (If you want to develop the framework (not with the framework)
   you can always uncomment the sniff includes)
   ******* Note: *******
   The following will work much smoother if you checked out testfw in the root
   directory of your PWE, this is usually where your WWW is located.

2. Use the wd_test project as a starting point for the test directory of your project.
   (use:  cvs co wd_test  to retrieve the latest version)
   
3. You need the Makefile, SetupRunner.cpp and TestTest.h, the other files
   can be deleted (or you may use them as a reference).
   
4. Adapt the Makefile to your situation
   (The Makefile includes your projects Makefile.master in ..)
   LFLAGS and INCLUDEFLAGS may need to be set to suit the tester program.
   Adapt the EXECUTABLE variable to your likings.
   
5. You will need to include your project's .o files into the tester program.
   Unfortunatley Sniff+ support cannot be used directly at this place.
   However, if you build a collection of your *.o's in your project
   (either a .a or a .o) you may specify them after $(TESTFWLIB) and everything
   will run fine.

6. The source directory of your project needs to be in the INCLUDEFLAGS analogous
   to $(WEBDIR).
   
7. Setup a Sniff+ project for your tester using standard settings.

8. Adapt the SetupRunner.cpp to refer to the required TestSuites. In general
   this will only include TestTest at the beginning, but it gives you a starting
   point.

9. Run Target->Update Makefiles in Sniff and make the project.
   (You might want to set a standard Target in the project attributes.)
   
   ************************************************************
   *   Now: execute the program and test happily ever after   *
   ************************************************************

# vim: set et ai ts=4 sw=4:
# -------------------------------------------------------------------------
# Copyright (c) 2010, Peter Sommerlad and IFS Institute for Software
# at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or
# modify it under the terms of the license that is included with this
# library/application in the file license.txt.
# -------------------------------------------------------------------------

import pkg_resources
pkg_resources.require(["SConsider"])
import SConsider

Import('*')

_sconsider_dist = pkg_resources.get_distribution('SConsider').parsed_version
if _sconsider_dist < pkg_resources.parse_version("0.5.dev"):
    buildSettings = {
        packagename: {
            'sourceFiles': SConsider.listFiles(['*.cpp']),
            'targetType': 'LibraryShared',
            'lazylinking': True,
            'public': {
                'includes': SConsider.listFiles(['*.h']),
            }
        }
    }
    SConsider.createTargets(packagename, buildSettings)

elif _sconsider_dist >= pkg_resources.parse_version("0.5.dev"):
    includeTarget = SConsider.EnvBuilder(
        export=[SConsider.EnvBuilder().include(Dir('.'))]
    ).build().RegisterPackageTarget(
        packagename=packagename,
        targetname='include'
    )

    libDepends = []

    libbuilderfunc = SConsider.createPackageSharedLibrary
    if SConsider.EnvBuilder().build()["PLATFORM"] == "win32":
        libbuilderfunc = SConsider.createPackageStaticLibrary

    lib = libbuilderfunc(
        packagename,
        packagename,
        SConsider.listFiles(['*.cpp']),
        depend=[includeTarget] + libDepends,
        pkg_local=[lambda env: env.allowUnresolvedLinkSymbols()]
    )

    libs = SConsider.EnvBuilder().depend(lib).build().RegisterPackageTarget(
        packagename=packagename,
        targetname='libs'
    )

    SConsider.EnvBuilder().depend(
        includeTarget,
        libs
    ).build().RegisterPackageTarget(
        packagename=packagename,
        targetname=packagename
    )

